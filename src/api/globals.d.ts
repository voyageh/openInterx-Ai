/* tslint:disable */
/* eslint-disable */
/**
 * MAVA API - version 1.0.0
 *
 * API description
 *
 * OpenAPI version: 3.0.3
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type LoginAuthResponse = {
  token?: string;
};
declare global {
  interface Apis {
    general: {
      /**
       * ---
       *
       * [GET] login
       *
       * **path:** /auth/customer/login
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 谷歌获取用户的token
       *   // [required]
       *   token: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   token?: string
       * }
       * ```
       */
      loginUsingGET<
        Config extends Alova2MethodConfig<LoginAuthResponse> & {
          params: {
            /**
             * 谷歌获取用户的token
             * [required]
             */
            token: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<LoginAuthResponse, 'general.loginUsingGET', Config>;
      /**
       * ---
       *
       * [GET] loginOut
       *
       * **path:** /auth/customer/loginOut
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 登录mava 的token
       *   // [required]
       *   token: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      loginOutUsingGET<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * 登录mava 的token
             * [required]
             */
            token: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.loginOutUsingGET', Config>;
      /**
       * ---
       *
       * [GET] verify-token
       *
       * **path:** /auth/customer/verify-token
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 登录mava 的token
       *   // [required]
       *   token: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      verifyTokenUsingGET<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * 登录mava 的token
             * [required]
             */
            token: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.verifyTokenUsingGET', Config>;
    };
  }

  var Apis: Apis;
}
